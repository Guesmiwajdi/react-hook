{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WessDjo\\\\Desktop\\\\gomycoden\\\\React-Router-master-main\\\\mon-app\\\\src\\\\Components\\\\MovieList\\\\MovieList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport MovieCard from \"../MovieCard/MovieCard\";\nimport \"./MovieList.css\";\nimport AddMovie from \"../AddMovie/AddMovie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieList(_ref) {\n  _s();\n\n  let {\n    titleSearch,\n    rateSearch,\n    setNewMovie,\n    newMovie\n  } = _ref;\n  const [newMovieData, setNewMovieData] = useState({\n    id: uuidv4(),\n    Title: \"\",\n    Description: \"\",\n    PosterUrl: \"\",\n    TrailerUrl: \"\",\n    Rating: 0\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movielist\",\n    children: [newMovie.filter(el => el.Title.toLowerCase().includes(titleSearch.toLowerCase()) && el.Rating >= rateSearch).map((val, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MovieCard, {\n        newMovie: val\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), \" \"]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(AddMovie, {\n      newMovie: newMovie,\n      newMovieData: newMovieData,\n      setNewMovie: setNewMovie,\n      setNewMovieData: setNewMovieData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieList, \"7sjH5gffnjXpEgJGh6a7T8sVBvQ=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["C:/Users/WessDjo/Desktop/gomycoden/React-Router-master-main/mon-app/src/Components/MovieList/MovieList.jsx"],"names":["React","useState","v4","uuidv4","MovieCard","AddMovie","MovieList","titleSearch","rateSearch","setNewMovie","newMovie","newMovieData","setNewMovieData","id","Title","Description","PosterUrl","TrailerUrl","Rating","filter","el","toLowerCase","includes","map","val","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,iBAAP;AAEA,OAAOC,QAAP,MAAqB,sBAArB;;;AAGA,SAASC,SAAT,OAMG;AAAA;;AAAA,MANgB;AACfC,IAAAA,WADe;AAEfC,IAAAA,UAFe;AAGfC,IAAAA,WAHe;AAIfC,IAAAA;AAJe,GAMhB;AAEC,QAAK,CAACC,YAAD,EAAcC,eAAd,IAAgCX,QAAQ,CAAC;AAC1CY,IAAAA,EAAE,EAACV,MAAM,EADiC;AAE1CW,IAAAA,KAAK,EAAE,EAFmC;AAG1CC,IAAAA,WAAW,EAAE,EAH6B;AAI1CC,IAAAA,SAAS,EAAE,EAJ+B;AAK1CC,IAAAA,UAAU,EAAC,EAL+B;AAM1CC,IAAAA,MAAM,EAAE;AANkC,GAAD,CAA7C;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACKR,QAAQ,CAACS,MAAT,CACIC,EAAD,IACIA,EAAE,CAACN,KAAH,CAASO,WAAT,GAAuBC,QAAvB,CACIf,WAAW,CAACc,WAAZ,EADJ,KAEKD,EAAE,CAACF,MAAH,IAAaV,UAJzB,EAKCe,GALD,CAKK,CAACC,GAAD,EAAMC,CAAN,kBACF;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA,cADJ,EACiC,GADjC;AAAA,OAAUC,CAAV;AAAA;AAAA;AAAA;AAAA,YANH,CADL,eAYI,QAAC,QAAD;AACI,MAAA,QAAQ,EAAEf,QADd;AAEI,MAAA,YAAY,EAAEC,YAFlB;AAGI,MAAA,WAAW,EAAEF,WAHjB;AAII,MAAA,eAAe,EAAEG;AAJrB;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GAvCQN,S;;KAAAA,S;AAyCT,eAAeA,SAAf","sourcesContent":["import React,{useState} from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport MovieCard from \"../MovieCard/MovieCard\";\nimport \"./MovieList.css\";\n\nimport AddMovie from \"../AddMovie/AddMovie\";\n\n\nfunction MovieList({\n    titleSearch,\n    rateSearch,\n    setNewMovie,\n    newMovie\n    \n}) {\n   \n    const[newMovieData,setNewMovieData] =useState({\n        id:uuidv4(),\n        Title: \"\",\n        Description: \"\",\n        PosterUrl: \"\",\n        TrailerUrl:\"\",\n        Rating: 0,\n    })\n    \n    return (\n        <div className=\"movielist\">\n            {newMovie.filter(\n                (el) =>\n                    el.Title.toLowerCase().includes(\n                        titleSearch.toLowerCase()\n                    ) && el.Rating >= rateSearch\n            ).map((val, i) => (\n                <div key={i}>\n                    <MovieCard newMovie={val} />{\" \"}\n                </div>\n            ))}\n\n            <AddMovie\n                newMovie={newMovie}\n                newMovieData={newMovieData}\n                setNewMovie={setNewMovie}\n                setNewMovieData={setNewMovieData}\n            />\n        </div>\n    );\n    \n}\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}